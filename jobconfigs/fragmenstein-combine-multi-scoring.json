{
  "application": {
    "application_id": "datamanagerjobs.squonk.it",
    "kind": "DataManagerJob",
    "latest_version": "v3"
  },
  "category": "comp chem",
  "collection": "fragmenstein",
  "command": "nextflow -log {{ DM_INSTANCE_DIRECTORY }}/nextflow.log run {{ CODE_DIRECTORY|default('/code') }}/frag_merge.nf --fragments '{{ fragments|join(\",\") }}' --protein '{{ protein }}' --outfile '{{ outfile }}' {% if count is defined %}--count {{ count }}{% endif %} --ref_mols_prop ref_mols {% if fragIdField %}--frag_id_field '{{ fragIdField }}'{% endif %} {% if smilesFieldName %}--smiles_prop '{{ smilesFieldName }}'{% endif %} {% if proteinFieldName %}--protein_prop_name '{{ proteinFieldName }}'{% endif %} {% if proteinFieldValue %}--protein_prop_value '{{ proteinFieldValue }}'{% endif %} {% if minNum is defined %}--min_num {{ minNum }}{% endif %} {% if maxNum is defined %}--max_num {{ maxNum }}{% endif %} {% if maxDist is defined %}--max_dist {{ maxDist }}{% endif %} {% if resultsDir is defined %}--publish_dir '{{ resultsDir }}'{% endif %} -with-trace {{ DM_INSTANCE_DIRECTORY }}/trace.txt -with-report {{ DM_INSTANCE_DIRECTORY }}/report.html",
  "command_encoding": "JINJA2_3_0",
  "description": "Given multiple fragment molecules generate pairs or tripples of these and for each set generate a merged molecule that combines aspects of those fragments. The merged molecules are minimised within the context of the protein and written to a SD-file.",
  "doc_url": "https://gitlab.com/api/v4/projects/33094905/repository/files/data-manager%2fdocs%2ffragmenstein%2ffragmenstein.md/raw",
  "exchange_rate": "10.0",
  "id": 38,
  "image_name": "registry.gitlab.com/informaticsmatters/squonk-fragmenstein/nextflow",
  "image_project_directory": "/data",
  "image_tag": "stable",
  "image_type": "NEXTFLOW",
  "image_working_directory": "/data",
  "job": "fragmenstein-combine-multi-scoring",
  "keywords": ["fragmenstein", "fbdd"],
  "name": "Combine combinations of fragments using Fragmenstein",
  "variables": {
    "inputs": "{\"type\": \"object\", \"required\": [\"fragments\", \"protein\"], \"properties\": {\"fragments\": {\"title\": \"Fragment molecules\", \"multiple\": true, \"mime-types\": [\"chemical/x-mdl-molfile\", \"chemical/x-mdl-sdfile\"], \"type\": \"file\"}, \"protein\": {\"title\": \"PDB file for protein\", \"mime-types\": [\"chemical/x-pdb\"], \"type\": \"file\"}}}",
    "options": "{\"type\": \"object\", \"required\": [\"outfile\"], \"properties\": {\"outfile\": {\"title\": \"Output file name\", \"type\": \"string\", \"default\": \"merged.sdf\", \"pattern\": \"^[A-Za-z0-9_/\\\\.\\\\-]+\\\\.sdf$\"}, \"count\": {\"title\": \"Number of molecules to generate\", \"type\": \"integer\", \"default\": 1, \"minimum\": 1}, \"keepHydrogens\": {\"title\": \"Keep hydrogens in the outputs\", \"type\": \"boolean\", \"default\": false}, \"minNum\": {\"title\": \"Minimum number to combine\", \"type\": \"integer\", \"default\": 2, \"minimum\": 2, \"maximum\": 3}, \"maxNum\": {\"title\": \"Maximum number to combine\", \"type\": \"integer\", \"default\": 2, \"minimum\": 2, \"maximum\": 3}, \"maxDist\": {\"title\": \"Maximum distance\", \"type\": \"number\", \"default\": 1.5, \"minimum\": 0}, \"fragIdField\": {\"title\": \"Input field name containing the fragment ID\", \"type\": \"string\", \"default\": \"_Name\"}, \"smilesFieldName\": {\"title\": \"Includes SMILES in output using this field name\", \"type\": \"string\"}, \"proteinFieldName\": {\"title\": \"Include PDB details in output using this field name\", \"type\": \"string\"}, \"proteinFieldValue\": {\"title\": \"Use this value for the proteinFieldName (if not specified the file name is used)\", \"type\": \"string\"}}}",
    "order": {
      "options": [
        "outfile",
        "count",
        "minNum",
        "maxNum",
        "maxDist",
        "keepHydrogens",
        "fragIdField",
        "smilesFieldName",
        "proteinFieldName",
        "proteinFieldValue"
      ]
    },
    "outputs": "{\"type\": \"object\", \"properties\": {\"outputs\": {\"title\": \"Merged molecules\", \"mime-types\": [\"chemical/x-mdl-sdfile\"], \"creates\": \"{{ outfile }}\", \"type\": \"file\", \"annotation-properties\": {\"fields-descriptor\": {\"origin\": \"squonk2-job\", \"description\": \"Combine combinations of fragments using Fragmenstein\", \"fields\": {\"IDX\": {\"type\": \"string\", \"description\": \"Molecule index\", \"required\": true}, \"DDG\": {\"type\": \"number\", \"description\": \"Delta deta G\", \"required\": true}, \"RMSD\": {\"type\": \"number\", \"description\": \"RMSD from input fragments\", \"required\": true}, \"ref_mols\": {\"type\": \"string\", \"description\": \"Input fragments\", \"required\": true}, \"smiles\": {\"type\": \"string\", \"expression\": \"{{ smilesFieldName }}\", \"description\": \"Molecule SMILES\", \"required\": true}, \"protein\": {\"type\": \"string\", \"expression\": \"{{ proteinFieldName }}\", \"description\": \"PDB file used\"}}}, \"service-execution\": {\"service_ref\": \"https://discourse.squonk.it/t/job-fragmenstein/110\"}, \"derived-from\": \"fragments\"}}}}"
  },
  "version": "1.0.0"
}
